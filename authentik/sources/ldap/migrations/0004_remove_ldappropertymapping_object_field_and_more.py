# Generated by Django 5.0.2 on 2024-02-29 11:21

import textwrap

from django.db import migrations


def change_expression(expression, field):
    return f"""
    def get_field():
        {textwrap.indent(expression, prefix='    ')}
    field = "{field}"
    result = {{"attributes": {{}}}}
    if field.startswith("attributes."):
        # Adapted from authentik/lib/config.py::set_path_in_dict
        root = result
        path_parts = field.split(".")
        for comp in path_parts[:-1]
            if comp not in root:
                root[comp] = {{}}
            root = root.get(comp, {{}})
        root[path_parts[-1]] = get_field()
    else:
        result[field] = get_field()
    return result
    """


def migrate_property_mappings(apps, schema_editor):
    if schema_editor.connection.alias != "default":
        return
    LDAPSource = apps.get_model("authentik_sources_ldap", "LDAPSource")
    for source in LDAPSource.objects.all():
        for mapping in source.property_mappings:
            mapping.expression = change_expression(mapping.expression, mapping.object_field)
            mapping.save()
            source.user_property_mappings.add(mapping)
        for mapping in source.property_mappings_group:
            mapping.expression = change_expression(mapping.expression, mapping.object_field)
            mapping.save()
            source.group_property_mappings.add(mapping)


class Migration(migrations.Migration):

    dependencies = [
        ("authentik_sources_ldap", "0003_ldapsource_client_certificate_ldapsource_sni_and_more"),
        ("authentik_core", "0034_source_group_property_mappings_and_more"),
    ]

    operations = [
        migrations.RunPython(migrate_property_mappings),
        migrations.RemoveField(
            model_name="ldappropertymapping",
            name="object_field",
        ),
        migrations.RemoveField(
            model_name="ldapsource",
            name="property_mappings_group",
        ),
    ]
